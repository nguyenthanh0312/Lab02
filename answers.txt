### 1.1. Những lớp nào là tập hợp của các lớp khác?  

- **Store** là tập hợp của **Media** (như **DigitalVideoDisc**, **CompactDisc**, v.v.).  
- **Cart** là tập hợp của **Media** (như **DigitalVideoDisc**, **CompactDisc**, v.v.).  
- **CompactDisc** là tập hợp của **Track**.  
- **Book** là tập hợp của các tác giả (dưới dạng một danh sách các chuỗi).  

---

### 1.2. Điều gì xảy ra nếu đối tượng truyền vào không phải là một thể hiện của Media?  

Nếu phương thức được định nghĩa để chấp nhận một tham số kiểu **Media** (ví dụ: `addMedia(Media media)`), thì chỉ các thể hiện của **Media** hoặc các lớp con của nó mới có thể được truyền vào.  

Nếu bạn cố gắng truyền một đối tượng không phải là **Media** hoặc không kế thừa từ **Media**, một lỗi biên dịch (compilation error) sẽ xảy ra. Điều này là do Java áp dụng quy tắc an toàn kiểu dữ liệu (type safety) trong quá trình biên dịch.  

---

### 1.3  

#### a. Lớp nào nên triển khai giao diện **Comparable**?  

- **Media** (hoặc có thể là các lớp con của **Media**, như **DigitalVideoDisc**, **CompactDisc**, **Book**, v.v.).  

#### b. Trong các lớp đó, phương thức `compareTo()` nên được triển khai như thế nào để phản ánh quy tắc sắp xếp mà chúng ta muốn?  

- **So sánh theo tiêu đề (title)**:  
  Sử dụng phương thức `compareTo()` của kiểu **String** để so sánh tiêu đề. Nếu các tiêu đề khác nhau, phương thức sẽ trả về giá trị chỉ định thứ tự:  
  - `< 0`: nếu `this.title` nhỏ hơn `other.title` (theo thứ tự từ điển).  
  - `> 0`: nếu `this.title` lớn hơn `other.title`.  

- **Nếu tiêu đề giống nhau**, so sánh theo giá:  
  Sử dụng `Float.compare()` để so sánh giá trị giá (cost), đảm bảo so sánh chính xác các số thực.  

---

#### c. Chúng ta có thể có hai quy tắc sắp xếp (theo tiêu đề rồi giá, hoặc theo giá rồi tiêu đề) nếu sử dụng cách tiếp cận với giao diện **Comparable** không?  

- **Có**, chúng ta có thể có hai quy tắc sắp xếp, nhưng giao diện **Comparable** chỉ định nghĩa một quy tắc sắp xếp tự nhiên duy nhất cho lớp.  
- Để có nhiều quy tắc sắp xếp, bạn cần sử dụng giao diện **Comparator**.  

---

#### d. Nếu DVD có một quy tắc sắp xếp khác với các loại media khác (theo tiêu đề, rồi chiều dài giảm dần, sau đó giá), làm thế nào bạn sửa mã của mình để hỗ trợ điều này?  

- **Đối với DVD**, chúng ta có thể **ghi đè phương thức `compareTo()`** trong lớp **DigitalVideoDisc** (hoặc bất kỳ lớp nào yêu cầu quy tắc này).  
- Quy tắc so sánh cụ thể có thể được triển khai như sau:  
  - So sánh theo tiêu đề (title).  
  - Nếu tiêu đề giống nhau, so sánh theo chiều dài (length) giảm dần.  
  - Nếu cả tiêu đề và chiều dài giống nhau, so sánh theo giá (cost).  

- Ngoài ra, để hỗ trợ linh hoạt nhiều quy tắc sắp xếp, bạn có thể triển khai các **Comparator** riêng biệt cho từng tiêu chí sắp xếp.  

Bằng cách sử dụng **Comparable** hoặc **Comparator**, bạn có thể đạt được việc sắp xếp linh hoạt cho các đối tượng media dựa trên các thuộc tính khác nhau.